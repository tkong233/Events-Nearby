package external;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import entity.Item;
import entity.Item.ItemBuilder;


public class TicketMasterAPI {
	private static final String EMBEDDED = "_embedded";
	private static final String EVENTS = "events";
	private static final String NAME = "name";
	private static final String ID = "id";
	private static final String URL_STR = "url";
	private static final String RATING = "rating";
	private static final String DISTANCE = "distance";
	private static final String VENUES = "venues";
	private static final String ADDRESS = "address";
	private static final String LINE1 = "line1";
	private static final String LINE2 = "line2";
	private static final String LINE3 = "line3";
	private static final String CITY = "city";
	private static final String IMAGES = "images";
	private static final String CLASSIFICATIONS = "classifications";
	private static final String SEGMENT = "segment";

	private List<Item> getItemList(JSONArray events) throws JSONException {
		List<Item> itemList = new ArrayList<>();

		for (int i = 0; i < events.length(); ++i) {
			JSONObject event = events.getJSONObject(i);
			
			ItemBuilder builder = new ItemBuilder();
			
			if (!event.isNull(NAME)) {
				builder.setName(event.getString(NAME));
			}
			if (!event.isNull(ID)) {
				builder.setItemId(event.getString(ID));
			}
			if (!event.isNull(URL_STR)) {
				builder.setUrl(event.getString(URL_STR));
			}
			if (!event.isNull(RATING)) {
				builder.setRating(event.getDouble(RATING));
			}
			if (!event.isNull(DISTANCE)) {
				builder.setDistance(event.getDouble(DISTANCE));
			}
			
			builder.setAddress(getAddress(event));
			builder.setCategories(getCategories(event));
			builder.setImageUrl(getImageUrl(event));
			
			itemList.add(builder.build());
		}
		return itemList;
	}

	
	
	private static final String URL = "https://app.ticketmaster.com/discovery/v2/events.json";
	private static final String DEFAULT_KEYWORD = ""; // no restriction
	private static final String API_KEY = "QG1UBvibTyCvyXLU30n7W3If03om772K";
	
		public JSONArray search(double lat, double lon, String keyword) {
	        if(keyword == null) {
	        	keyword = DEFAULT_KEYWORD;
	        }
	        
	        try {
				keyword = URLEncoder.encode(keyword, "UTF-8");
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	        
	        String geoHash = GeoHash.encodeGeohash(lat, lon, 8);
	        String query = String.format("apikey=%s&geoPoint=%s&keyword=%s&radius=50", API_KEY, geoHash, keyword);
	        
	        try {
				HttpURLConnection connection = (HttpURLConnection) new URL(URL + "?" + query).openConnection();
				connection.setRequestMethod("GET");
				
				int responseCode = connection.getResponseCode();	// 1.check是否发送过request 2.如果没发过，就发
				
				System.out.println("Sending 'GET' request");
				System.out.println("Response Code: " + responseCode);
				
				connection.getInputStream(); // 以“我”为中心，读server发来的数据：getInputStream，向server发送数据：getOutputStream
				
				BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));		//BufferedReader: 一行一行读
				
				StringBuilder response = new StringBuilder();
				String inputline;
				while((inputline = in.readLine()) != null) {
					response.append(inputline);
				}
				in.close();
				
				JSONObject obj = new JSONObject(response.toString());
				if (!obj.isNull("_embedded")) {
					JSONObject embbeded = obj.getJSONObject("_embedded");
					return embbeded.getJSONArray("events");		//从embedded里挑出events返回
				}	
	        } catch (Exception e) {
				e.printStackTrace();
			}
			return new JSONArray();		
		}
		
		
		
		private void queryAPI(double lat, double lon) {
			JSONArray events = search(lat, lon, null);

			try {
				for (int i = 0; i < events.length(); ++i) {
					JSONObject event = events.getJSONObject(i);
					System.out.println(event.toString(2));
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		/**
		 * Main entry for sample TicketMaster API requests.
		 */
		public static void main(String[] args) {
			TicketMasterAPI tmApi = new TicketMasterAPI();
			// Mountain View, CA
			// tmApi.queryAPI(37.38, -122.08);
			// London, UK
			// tmApi.queryAPI(51.503364, -0.12);
			// Houston, TX
			tmApi.queryAPI(29.682684, -95.295410);
		}


}
